spring.datasource.url=${DBURL}
spring.datasource.username=${DBUSER}
spring.datasource.password=${DBPASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

page.showAll.size=2

security.jwt.token.secret-key=secret-key

sql.accRoleRep.create = INSERT INTO account_role(account_role_name) VALUES(?);
sql.roleRep.delete = DELETE FROM account_role WHERE account_role_name=?;

sql.account.create=INSERT INTO account(id, first_name,last_name,birth_date,gender,user_img, account_role) VALUES(?,?, ?, ?,?::user_gender,'',?::account_roles)
sql.account.findById=SELECT * FROM account WHERE id=?
sql.account.findByEmail=SELECT a.* FROM credentials c JOIN account a ON c.id=a.id WHERE c.email=?

sql.credentials.create=INSERT INTO credentials(id,email,password) VALUES(?,?,?)
sql.credentials.findById=SELECT * FROM credentials WHERE id=?
sql.credentials.findByEmail=SELECT * FROM credentials WHERE email=?

sql.moderator.findAll=SELECT c.email, a.first_name, a.last_name, a.birth_date \
                        FROM account a join credentials c \
                        ON a.id = c.id \
                        WHERE account_role = ?::account_roles AND \
                        (CONCAT(a.first_name, ' ', a.last_name) ILIKE CONCAT('%',:search, '%')) \
                        LIMIT :size OFFSET :rowOffset
sql.moderator.countFindAll=SELECT COUNT(*) FROM account a join credentials c \
                        ON a.id = c.id \
                        WHERE account_role = ?::account_roles AND \
                        (CONCAT(a.first_name, ' ', a.last_name) ILIKE CONCAT('%',:search, '%'))