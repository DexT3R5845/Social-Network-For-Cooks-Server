spring.datasource.url=${DBURL}
spring.datasource.username=${DBUSER}
spring.datasource.password=${DBPASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

page.showAll.limit=4

security.jwt.token.secret-key=secret-key

sql.accRoleRep.create = INSERT INTO account_role(account_role_name) VALUES(?);
sql.roleRep.delete = DELETE FROM account_role WHERE account_role_name=?;


sql.account.create=INSERT INTO account(id, first_name,last_name,birth_date,gender,user_img, account_role) VALUES(?,?, ?, ?,?::user_gender,'',?::account_roles)
sql.account.findById=SELECT * FROM account WHERE id=?
sql.account.findByEmail=SELECT a.* FROM credentials c JOIN account a ON c.id=a.id WHERE c.email=?
sql.account.updateAccData=UPDATE account SET first_name = ?, last_name = ?, birth_date = ?, gender = ?::user_gender, user_img = ? where id = ?


sql.credentials.create=INSERT INTO credentials(id,email,password) VALUES(?,?,?)
sql.credentials.findById=SELECT * FROM credentials WHERE id=?
sql.credentials.findByEmail=SELECT * FROM credentials WHERE email=?
sql.credentials.getEmailById=SELECT email FROM credentials WHERE id = ?


sql.moderator.findAll=SELECT id, first_name, last_name, user_img as img_url \
                        FROM account \
                        WHERE account_role = ?::account_roles AND \
                        (CONCAT(first_name, ' ', last_name) ILIKE CONCAT('%',?, '%')) \
                        LIMIT ? OFFSET ?
sql.moderator.countFindAll=SELECT COUNT(*) FROM account \
                        WHERE account_role = ?::account_roles AND \
                        (CONCAT(first_name, ' ', last_name) ILIKE CONCAT('%',?, '%'))
